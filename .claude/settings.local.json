{
  "permissions": {
    "allow": [
      "Bash(git add DONE.md TODO.md)",
      "Bash(git commit -m \"$(cat <<''EOF''\ndocs: move completed MVP tasks from TODO to DONE\n\nMoved all completed MVP launch blockers to DONE.md:\n- Drawing & selection stability (partial erase, multi-select)\n- Session management (player save/load parity)\n- E2E testing infrastructure (Playwright tests)\n- README documentation improvements\n\nCleaned up TODO.md to focus on upcoming work, with references\nto DONE.md for completed milestones.\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git push origin dev)",
      "Bash(gh run list --workflow=ci.yml --limit=1 --json status,conclusion,databaseId,headBranch,createdAt,displayTitle)",
      "Bash(gh run watch 18634644893)",
      "Bash(gh run view 18634644893 --log-failed)",
      "Bash(pnpm format)",
      "Bash(git add -A)",
      "Bash(git commit -m \"fix: auto-format code for CI\")",
      "Bash(gh run watch 18634658524)",
      "Bash(git add apps/server/src/domains/auth/__tests__/authService.test.ts)",
      "Bash(git commit -m \"fix: suppress eslint warnings for intentional any usage in auth tests\")",
      "Bash(gh run watch 18634669620)",
      "Bash(git add .claude/workflow-patterns.md CONTRIBUTING.md)",
      "Bash(git commit -m \"docs: add CI monitoring workflow pattern and update CONTRIBUTING\n\n- Created .claude/workflow-patterns.md to document automatic CI monitoring after git push\n- Updated CONTRIBUTING.md with section on CI monitoring using /ci-check command\n- Documented auto-fix patterns for common CI failures (Prettier, ESLint)\n- Included manual monitoring commands for contributors not using Claude Code\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\")",
      "Bash(git add CONTRIBUTING.md)",
      "Bash(git commit -m \"docs: add CI monitoring section to CONTRIBUTING\n\n- Added ''Monitoring CI After Push'' section to Pull Request Process\n- Documented /ci-check command for Claude Code users\n- Included manual monitoring commands using gh CLI\n- Listed common auto-fixable CI issues and their solutions\n- Emphasized zero warnings policy enforcement\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\")",
      "SlashCommand(/ci-check)",
      "Bash(gh run watch 18634713605)",
      "Bash(pnpm test)",
      "Bash(pnpm test:e2e)",
      "Bash(wait)",
      "Bash(npx playwright test comprehensive-mvp.spec.ts --reporter=list)",
      "Bash(npx playwright test comprehensive-mvp.spec.ts -g \"1. Authentication\" --reporter=list)",
      "Bash(npx playwright test comprehensive-mvp.spec.ts -g \"1. Authentication\" --reporter=list --timeout=60000)",
      "Read(//tmp/**)",
      "Bash(npx playwright test comprehensive-mvp.spec.ts --reporter=list --timeout=60000 --workers=1)"
    ],
    "deny": [],
    "ask": []
  },
  "enabledMcpjsonServers": [
    "github-mcp",
    "chrome-devtools",
    "Ref",
    "sequential-thinking",
    "vercel",
    "cloudflare-observability",
    "cloudflare-bindings",
    "semgrep",
    "vibe-check"
  ]
}
