{
  "permissions": {
    "allow": [
      "Bash(pnpm add:*)",
      "Bash(pnpm remove:*)",
      "Bash(npm run build:*)",
      "Bash(npm run:*)",
      "mcp__ide__getDiagnostics",
      "Bash(pnpm dev:*)",
      "Bash(pgrep:*)",
      "Bash(node:*)",
      "Bash(pnpm build:*)",
      "Bash(cat:*)",
      "Bash(pkill:*)",
      "Bash(kill:*)",
      "Bash(lsof:*)",
      "Bash(awk:*)",
      "Bash(xargs kill:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(pnpm install:*)",
      "Bash(pnpm --filter vtt-server build)",
      "Bash(pnpm start:*)",
      "Bash(curl:*)",
      "Bash(pnpm build:client:*)",
      "Read(//mnt/c/Users/loshu/**)",
      "Bash(pnpm run:*)",
      "Bash(pnpm --filter vtt-server start)",
      "Bash(pnpm --filter herobyte-client dev)",
      "Bash(pnpm --filter herobyte-client build)",
      "Bash(git checkout:*)",
      "Bash(git merge dev -m \"$(cat <<''EOF''\nMerge Phase 4: Performance optimizations and security middleware\n\nAdvanced optimizations for production-ready deployment:\n\nClient-Side Performance (React.memo):\n- Optimized TokensLayer, DrawingsLayer, PointersLayer, GridLayer\n- Prevents unnecessary re-renders during camera operations\n- Significant performance improvement with complex maps\n\nServer-Side Security:\n- Input validation middleware for all 15+ message types\n- Type checking, range validation, size limits\n- Rate limiting (100 messages/second per client)\n- Protection against malformed data and DoS attacks\n- Enhanced error logging with client identification\n\nMiddleware:\n- middleware/validation.ts - Comprehensive input validation\n- middleware/rateLimit.ts - Token bucket rate limiter\n- Integrated into message handling pipeline\n\nTesting validated:\nâœ… Input validation catching invalid messages\nâœ… Rate limiting blocking excess requests\nâœ… All functionality working with middleware active\nâœ… Performance improvements noticeable\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git pull:*)",
      "Bash(git tag:*)",
      "Bash(pnpm --filter herobyte-server build)",
      "Bash(exit 0)",
      "Bash(git merge:*)",
      "WebFetch(domain:herobyte.pages.dev)",
      "Bash(git fetch:*)",
      "Bash(pnpm test:*)",
      "Bash(pnpm --filter @shared test:coverage)",
      "Bash(pnpm --filter vtt-server test:coverage)",
      "Bash(pnpm lint:*)",
      "Bash(pnpm format:*)",
      "Bash(pnpm --filter vtt-server lint)",
      "Bash(npx eslint:*)",
      "Bash(pnpm --filter vtt-server lint --max-warnings 50)",
      "Bash(pnpm --filter herobyte-client lint)",
      "Bash(find:*)",
      "Bash(pnpm list:*)",
      "Bash(pnpm --filter vtt-server add -D @types/simple-peer)",
      "Bash(gh run list:*)",
      "Bash(pnpm test:coverage:*)",
      "Bash(/dev/null)",
      "WebFetch(domain:github.com)",
      "Bash(gh run view:*)",
      "Bash(pnpm --filter @shared test)",
      "Bash(git restore:*)",
      "Bash(git log:*)",
      "Bash(pnpm --filter vtt-server lint --fix)",
      "Bash(pnpm --filter herobyte-client lint --fix)",
      "Bash(pnpm --filter vtt-server test)",
      "Bash(netstat:*)",
      "Bash(ss:*)",
      "Bash(PORT=5174 pnpm vite:*)",
      "Bash(chmod:*)",
      "Bash(fuser:*)",
      "Bash(pnpm --filter @shared build)",
      "Bash(pnpm --filter herobyte-server lint)",
      "Bash(PORT=3000 node dist/index.js)",
      "Bash(PORT=5174 pnpm dev:*)",
      "Bash(xargs ps:*)",
      "Read(//tmp/**)",
      "Bash(pnpm --filter vtt-server test validation)"
    ],
    "deny": [],
    "ask": []
  }
}
