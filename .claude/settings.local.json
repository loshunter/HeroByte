{
  "permissions": {
    "allow": [
      "Bash(git cherry-pick main)",
      "Bash(gh run list --branch main --limit 3)",
      "Bash(gh run watch 18636837003)",
      "Bash(gh run list --branch dev --limit 3)",
      "Bash(gh run view 18636836837 --log-failed)",
      "Bash(pnpm tsc --noEmit)",
      "Bash(git commit -m \"$(cat <<''EOF''\nfix(client): correct toast API usage - pass duration as number\n\n## Fix TypeScript Build Error on Dev Branch\n\nThe dev branch toast hook expects `duration` as a number parameter,\nnot an object. Fixed three toast calls that were using the wrong API.\n\n## Changes\n- toast.success(..., 4000) instead of toast.success(..., {duration: 4000})\n- toast.error(..., 5000) instead of toast.error(..., {duration: 5000})  \n- toast.warning(..., 3000) instead of toast.warning(..., {duration: 3000})\n\n## Errors Fixed\n```\nerror TS2345: Argument of type ''{ duration: number; }'' is not assignable to parameter of type ''number''.\n```\n\n## Related\n- apps/client/src/ui/App.tsx:597, 603, 1082\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(gh run list --branch dev --limit 2)",
      "Bash(gh run watch 18636869051)",
      "Bash(git commit -m \"$(cat <<''EOF''\nfix(client): enable DM revocation functionality\n\n## Fix DM Revocation\n\nFixed the \"DM cannot be revoked\" issue - the client was blocking\nDM revocation with a warning toast instead of sending the revoke\nmessage to the server.\n\n## Changes\n- Updated `handleToggleDM` to send `revoke-dm` message (apps/client/src/ui/App.tsx:1078-1090)\n- Added confirmation dialog before revoking DM status\n- Shows success toast after revocation\n- Removed blocking warning message\n\n## Server Support\nThe server already had full support for DM revocation:\n- `revoke-dm` message type defined (packages/shared/src/index.ts)\n- Handler implemented (apps/server/src/ws/connectionHandler.ts:181-184)\n- Validation in place (apps/server/src/middleware/validation.ts:755)\n\n## Use Case\nEnables collaborative DM handoff:\n1. Active DM clicks \"Exit DM\" \n2. Confirms revocation in dialog\n3. Another player can elevate to DM with password\n4. Original DM can re-elevate later if needed\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git checkout --theirs apps/client/src/ui/App.tsx)",
      "Bash(git commit --no-edit)",
      "Bash(git add apps/client/src/features/dm/components/DMMenu.tsx apps/client/src/ui/App.tsx apps/client/src/ui/MapBoard.tsx apps/server/src/domains/room/service.ts apps/server/src/middleware/validation.ts apps/server/src/ws/messageRouter.ts)",
      "Bash(git commit -m \"$(cat <<''EOF''\nfeat(staging-zone): add lock functionality and viewport-based placement\n\n## Staging Zone Enhancements\n\n### Viewport-Based Placement\n- Staging zone now appears at viewport center when \"Apply Zone\" is clicked\n- Size automatically adjusts based on current zoom level (40% of viewport)\n- No more manual positioning needed - just zoom to desired area and click\n\n### Transform Tool Support\n- Fixed bug where scaling with transform tool caused zone to disappear\n- Root cause: Position coordinate mismatch (pixels vs grid units)\n- Zone now properly scales and persists transforms\n\n### Lock Functionality\n- Added lock/unlock button to Player Staging Zone panel\n- Locked zones are protected from accidental modification\n- UI collapses when locked for cleaner interface\n- Matches Map Transform and Grid Controls design pattern\n\n### Server Changes\n- Preserve scale during scene object regeneration (apps/server/src/domains/room/service.ts:511-512)\n- Apply scale to transform instead of baking into width/height\n- Fixed double-scaling issue in dimension calculations\n\n### Client Changes\n- Added camera state tracking (apps/client/src/ui/App.tsx)\n- Created stagingZoneSceneObject for lock state management\n- Position conversion for staging zone (pixels to grid units) in MapBoard\n- Lock props passed to DMMenu for UI control\n- CollapsibleSection component for smooth expand/collapse\n\n## Technical Details\n\n**Coordinate System Fix:**\n- TransformGizmo sends position in pixels\n- Staging zone expects grid units\n- Added conversion: `position.x / gridSize` (apps/client/src/ui/MapBoard.tsx:552-561)\n\n**Scale Persistence:**\n- Scene objects now preserve scaleX/scaleY from previous state\n- Prevents reset to 1 on regeneration\n\n**UI Improvements:**\n- Border changes to gray when locked\n- Lock button shows ðŸ”’/ðŸ”“ with â–²/â–¼ indicators\n- Padding adjusts from 12px to 8px when locked\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git add apps/client/src/components/layout/EntitiesPanel.tsx apps/client/src/features/players/components/PlayerCard.tsx apps/client/src/features/players/components/PlayerSettingsMenu.tsx apps/client/src/ui/App.tsx apps/server/src/middleware/validation.ts apps/server/src/ws/connectionHandler.ts apps/server/src/ws/messageRouter.ts packages/shared/src/index.ts)",
      "Bash(gh run list --branch dev --limit 1)",
      "Bash(gh run view 18639626552 --log-failed)",
      "Bash(git add apps/server/src/middleware/validation.ts)",
      "Bash(git commit -m \"fix: auto-format code for CI\")",
      "Bash(gh run watch 18639659731)",
      "Bash(gh run view 18639659731 --log-failed)",
      "Bash(pnpm --filter herobyte-client lint --fix)",
      "Bash(git add -A)"
    ],
    "deny": [],
    "ask": []
  },
  "enabledMcpjsonServers": [
    "github-mcp",
    "chrome-devtools",
    "Ref",
    "sequential-thinking",
    "vercel",
    "cloudflare-observability",
    "cloudflare-bindings",
    "semgrep",
    "vibe-check"
  ]
}
